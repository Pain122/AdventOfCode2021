[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\pavel\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\pavel\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 152.7421ms
[debug]       Load.loadUnit: defsScala took 0.3598ms
[debug] [Loading] Scanning directory C:\Users\pavel\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pavel\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8491 ms
[debug]           Load.resolveProject(global-plugins) took 52.6281ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\pavel\.sbt\1.0\plugins, plugins: List(<none>))) took 100.8928ms
[debug] [Loading] Done in C:\Users\pavel\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 135.4043ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2755ms
[debug]     Load.loadUnit(file:/C:/Users/pavel/.sbt/1.0/plugins/, ...) took 302.7066ms
[debug]   Load.apply: load took 585.2368ms
[debug]   Load.apply: resolveProjects took 11.6221ms
[debug]   Load.apply: finalTransforms took 112.1744ms
[debug]   Load.apply: config.delegates took 11.5465ms
[debug]   Load.apply: Def.make(settings)... took 593.8369ms
[debug]   Load.apply: structureIndex took 170.771ms
[debug]   Load.apply: mkStreams took 3.0672ms
[info] loading global plugins from C:\Users\pavel\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3646.1729ms
[debug]           Load.loadUnit: plugins took 38.467ms
[debug]           Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala\project
[debug]             Load.loadUnit: mkEval took 8.8848ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.9113 ms
[info] loading settings for project scala-build from idea1.sbt ...
[debug]               Load.resolveProject(scala-build) took 5.5915ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala\project, plugins: List(<none>))) took 11.7442ms
[debug] [Loading] Done in C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3753.3853ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.1154ms
[debug]         Load.loadUnit(file:/C:/Users/pavel/Documents/GitHub/AdventOfCode2021/Day2/Scala/project/, ...) took 3811.8617ms
[debug]       Load.apply: load took 3816.8613ms
[debug]       Load.apply: resolveProjects took 0.3264ms
[debug]       Load.apply: finalTransforms took 28.0723ms
[debug]       Load.apply: config.delegates took 1.2915ms
[debug]       Load.apply: Def.make(settings)... took 219.4075ms
[debug]       Load.apply: structureIndex took 72.9721ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6738.5598ms
[debug]     Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala
[debug]       Load.loadUnit: mkEval took 0.7801ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.2836 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 84.7969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala, plugins: List(<none>))) took 92.6057ms
[debug] [Loading] Done in C:\Users\pavel\Documents\GitHub\AdventOfCode2021\Day2\Scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 2775.6339ms
[debug]     Load.loadUnit: cleanEvalClasses took 97.6848ms
[debug]   Load.loadUnit(file:/C:/Users/pavel/Documents/GitHub/AdventOfCode2021/Day2/Scala/, ...) took 9613.9942ms
[debug] Load.apply: load took 9619.4088ms
[debug] Load.apply: resolveProjects took 0.4368ms
[debug] Load.apply: finalTransforms took 60.042ms
[debug] Load.apply: config.delegates took 0.7475ms
[debug] Load.apply: Def.make(settings)... took 143.7276ms
[debug] Load.apply: structureIndex took 54.3292ms
[debug] Load.apply: mkStreams took 0.0049ms
[info] set current project to Scala (in build file:/C:/Users/pavel/Documents/GitHub/AdventOfCode2021/Day2/Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64359 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64359, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala (in build file:/C:/Users/pavel/Documents/GitHub/AdventOfCode2021/Day2/Scala/)
[debug] > Exec(idea-shell, None, None)
